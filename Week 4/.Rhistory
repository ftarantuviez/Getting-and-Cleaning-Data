demo()
install.packages("audio")
audio::as.audioSample(x = 32)
play(sin(1:10000/20))
library(audio)
play(sin(1:10000/20))
play(sin(1:100/20))
play(sin(1:1000000000000/20))
play(sin(1:2112/20))
play(sin(1:21122/20))
View(iris)
unique(iris$Species)
installed.packages()
install.packages("GGally", repos = "https://cran.r-project.org", type = "source")
View(df)
ggplot(df, aes(x=X, y=y)) + geom_point()
install.packages("ggplot2")
ggplot(df, aes(x=X, y=y)) + geom_point()
ggplot2::ggplot(df, aes(x=X, y=y)) + geom_point()
ggplot2(df, aes(x=X, y=y)) + geom_point()
ggplot2(df, aes(x=X, y=y)) + geom_point()
ggplot(df, aes(x=X, y=y)) + geom_point()
install.packages("colorspace")
help.start()
mean()
mean([2,4,5,6,6])
mean((3,4,5))
mean((3 4 5))
ll
!ll
data.frame()
data.frame(["dfs"])
"df"
install.packages("pplot2")
install.packages("ggplot2")
library(ggplot2)
ggplot2.plot
ggplot2
plot
exit
q()
browseVignettes("ggplot2")
sessionInfo()
install.packages("KernSmooth ")
install.packages("KernSmooth")
library(KernSmooth)
aes
install.packages("devtools")
swirl()
library(swirl)
swirl()
swirl::info()
install_course("Getting and Cleaning Data")
swirl()
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = F)
mydf <- read.csv(path2csv, stringsAsFactors = FAKSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
select(cran, -5:20)
select(cran, 5:20)
5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package="swirl")
filter(cran, package=="swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version >= "3.0.2", country == "IN")
filter(cran, r_version => "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size>100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
desc(ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, c(ip_id, package, size))
cran3 <- select(cran,ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size /2^20, correct_size = size_mb - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes=mean(size))
library(dplyr)
tbl_df()
mydf
cran <- tbl_df(mydf)
rm("mydf")
cran
group_by(cran, package)
?group_by
by_package <- group_by(cran, package)
by_package
summarize(mean(size))
summarize(cran, mean(size)
)
summarize(by_package, mean(size))
q()
swirl()
library(swirl)
swirl()
install_course("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(pollution$pm25)
ppm
quantile(ppm)
dfs
dirt
dir
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
rug(hihg)
rug(high)
low
high
hist(ppm, breaks=100, col="green")
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), lwd=4, col="magenta")
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25 ~ region, data=pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
barplot(pollution,)
barplot(pollution$pm25)
east <- subset(pollution,region=="east")
east
head(east)
hist(east$pm25)
hist(east$pm25, col="green")
west <- subset(pollution,region=="west")
hist(subset(pollution,region=="west")$pm25, col="green")
dir
with(pollution, plot(latitude, pm25))
abline(v=12, lwd=2, lty=2)
abline(h=12, lwd=2, lty=2)
dir
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1, 2),
| mar = c(5, 4, 2, 1))
par(mfrow = c(1, 2),mar = c(5, 4, 2, 1))
dir
west <- subset(pollution, region="west")
west <- subset(pollution,region="west")
west <- subset(pollution,region=="west")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="East")
swirl()
libarty(swril)
library(swirl)
swirl
swirl()
swirl()
q
0
0
q
q()
setwd("~/python/Hopkings_Data_Science_Specialization/3. Getting and Cleaning Data/Week 4")
ls
ls()
dir()
source("run_analysis.R")
exit
q()
