demo()
install.packages("audio")
audio::as.audioSample(x = 32)
play(sin(1:10000/20))
library(audio)
play(sin(1:10000/20))
play(sin(1:100/20))
play(sin(1:1000000000000/20))
play(sin(1:2112/20))
play(sin(1:21122/20))
View(iris)
unique(iris$Species)
installed.packages()
install.packages("GGally", repos = "https://cran.r-project.org", type = "source")
View(df)
ggplot(df, aes(x=X, y=y)) + geom_point()
install.packages("ggplot2")
ggplot(df, aes(x=X, y=y)) + geom_point()
ggplot2::ggplot(df, aes(x=X, y=y)) + geom_point()
ggplot2(df, aes(x=X, y=y)) + geom_point()
ggplot2(df, aes(x=X, y=y)) + geom_point()
ggplot(df, aes(x=X, y=y)) + geom_point()
install.packages("colorspace")
help.start()
mean()
mean([2,4,5,6,6])
mean((3,4,5))
mean((3 4 5))
ll
!ll
data.frame()
data.frame(["dfs"])
"df"
install.packages("pplot2")
install.packages("ggplot2")
library(ggplot2)
ggplot2.plot
ggplot2
plot
exit
q()
browseVignettes("ggplot2")
sessionInfo()
install.packages("KernSmooth ")
install.packages("KernSmooth")
library(KernSmooth)
aes
install.packages("devtools")
swirl()
library(swirl)
swirl()
swirl::info()
install_course("Getting and Cleaning Data")
swirl()
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = F)
mydf <- read.csv(path2csv, stringsAsFactors = FAKSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
select(cran, -5:20)
select(cran, 5:20)
5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package="swirl")
filter(cran, package=="swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version >= "3.0.2", country == "IN")
filter(cran, r_version => "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size>100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
desc(ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, c(ip_id, package, size))
cran3 <- select(cran,ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size /2^20, correct_size = size_mb - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes=mean(size))
library(dplyr)
tbl_df()
mydf
cran <- tbl_df(mydf)
rm("mydf")
cran
group_by(cran, package)
?group_by
by_package <- group_by(cran, package)
by_package
summarize(mean(size))
summarize(cran, mean(size)
)
summarize(by_package, mean(size))
q()
getwd()
setwd("~/python/Hopkings_Data_Science_Specialization/3. Getting and Cleaning Data/Week 2")
setwd("..")
dir.create("Week 3")
setwd("Week 3/")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "data_q1.csv")
library(dplyr)
df <- read.csv("data_q1.csv")
df <- tbl_df(df)
df
select(df, ACR == 3)
df
df$ACR
select(df, "ACR" == 3)
select(df, ACR == 3)
?select
select(df, ACR)
filter(df, ACR == 3)
filter(df, ACR == 3)$ACR
filter(df, ACR == 3, AGS == 6)
agricultureLogical <- filter(df, ACR == 3, AGS == 6)
which(agricultureLogical)
df
rm("df")
df <- read.csv("data_q1.csv")
df[(df$ACR == 3 & df$AGS ==6)]
df[(df$ACR == 3 & df$AGS ==6),]
df[(df$ACR == 3 & df$AGS ==6),]$ACR
(df$ACR == 3 & df$AGS ==6)
which((df$ACR == 3 & df$AGS ==6))
install.packages("jpeg")
library(jpeg)
jpeg::readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
jpeg::readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = T)
jpeg::readJPEG(source="https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = "data_2q.jpg")
readJPEG("data_2q.jpg")
readJPEG("data_2q.jpg", native=T)
quantile(readJPEG("data_2q.jpg", native=T))
quantile(readJPEG("data_2q.jpg", native=T), )
?quantile
quantile(readJPEG("data_2q.jpg", native=T), probs = c(0.0, 0.3, 0.5, 0.8))
quantile(readJPEG("data_2q.jpg", native=T), probs = c(0.3, 0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "data_q3.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "data_q3.1.csv")
df1 <- read.csv("data_q3.csv")
df1 <- read.csv("data_q3.1.csv")
df1 <- read.csv("data_q3.csv")
df2 <- read.csv("data_q3.1.csv")
df1
head(df1)
colnames(df1)
df1
df1$Gross.domestic.product.2012
df1$X
df2$CountryCode
df1_astbl <- tbl_df(df1)
